// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protobuf/protobufDemo.pbuser.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "ProtobufDemoPbuser.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ProtobufDemoPbuserRoot

@implementation ProtobufDemoPbuserRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - ProtobufDemoPbuserRoot_FileDescriptor

static GPBFileDescriptor *ProtobufDemoPbuserRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"protobufDemo"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - AppContextMessage

@implementation AppContextMessage

@dynamic netConnetionType;
@dynamic screenResolution;
@dynamic deviceToken;
@dynamic macAddress;
@dynamic carrierName;
@dynamic deviceModel;
@dynamic wifiName;
@dynamic deviceName;
@dynamic deviceType;
@dynamic systemVersion;
@dynamic deviceUuid;
@dynamic gps;
@dynamic appVersion;

typedef struct AppContextMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *netConnetionType;
  NSString *screenResolution;
  NSString *deviceToken;
  NSString *macAddress;
  NSString *carrierName;
  NSString *deviceModel;
  NSString *wifiName;
  NSString *deviceName;
  NSString *deviceType;
  NSString *systemVersion;
  NSString *deviceUuid;
  NSString *gps;
  NSString *appVersion;
} AppContextMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "netConnetionType",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_NetConnetionType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, netConnetionType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "screenResolution",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_ScreenResolution,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, screenResolution),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceToken",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_DeviceToken,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, deviceToken),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "macAddress",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_MacAddress,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, macAddress),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "carrierName",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_CarrierName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, carrierName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceModel",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_DeviceModel,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, deviceModel),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "wifiName",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_WifiName,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, wifiName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceName",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_DeviceName,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, deviceName),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceType",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_DeviceType,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, deviceType),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "systemVersion",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_SystemVersion,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, systemVersion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceUuid",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_DeviceUuid,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, deviceUuid),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "gps",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_Gps,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, gps),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = AppContextMessage_FieldNumber_AppVersion,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(AppContextMessage__storage_, appVersion),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[AppContextMessage class]
                                     rootClass:[ProtobufDemoPbuserRoot class]
                                          file:ProtobufDemoPbuserRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(AppContextMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
